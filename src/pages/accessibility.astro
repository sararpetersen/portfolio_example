---
import MainLayout from "../layouts/MainLayout.astro";
import Button from "../components/Button.astro";
import "../styles/global.css";
---

<MainLayout
  title="SRP portfolio | Accessibility"
  description="Accessibility-information about this portfolio"
  ogtitle="SRP portfolio - the portfolio of Sara Ringkow Petersen"
  ogdescription="See what makes this portfolio accessible"
>
  <section id="accessibility" class="grid grid-cols-12 max-w-6xl mx-auto md:pt-desktop-top pt-mobil-top md:mt-16 mt-8 md:px-0 px-6">
    <div class="col-span-12 md:pt-12 pt-16">
      <h1 class="heading-title font-bold md:text-left text-center text-gray-950 mb-4">Accessibility on the site</h1>
      <p class="heading-text leading-7 md:text-left text-center text-gray-950 md:pb-0 pb-16 max-w-3xl">
        Accessibility isn't just a design consideration&mdash; it's a responsibility. As someone who understands the importance of inclusive
        experiences, I've made it a priority to ensure that this portfolio is accessible to all users, regardless of ability, device or environment.
      </p>
    </div>

    <div id="lines" class="hidden md:block col-span-9">
      <hr class="border-gray-950 mt-6 md:w-[70%] w-[90%]" />
      <hr class="border-gray-950 mt-3 md:w-[50%] w-[70%]" />
    </div>
  </section>

  <!-- Accessibility-features -->
  <section id="accessibility-features" class="grid grid-cols-12 max-w-6xl mx-auto md:pt-desktop-top pt-0 md:px-0 px-6">
    <div class="col-span-12 grid md:grid-cols-2 grid-cols-1 gap-12">
      <div>
        <h2 id="accessibility-features-title" class="md:text-h3-desktop text-h3-mobile text-gray-950 mb-4">Implemented features</h2>
        <!-- List -->
        <ul id="accessibility-features-list" class="list-none text-gray-950 space-y-3 md:order-1 order-2 w-fit">
          <li>► Semantic and structured HTML</li>
          <li>► Alt-text on all images</li>
          <li>► ARIA-labels where needed</li>
          <li>► Keyboard-navigable components</li>
          <li>► Focus-indicators on interactive elements</li>
          <li>► Dark-mode and 'remove animations'-functions</li>
          <li>► Color-contrast meets WCAG 2.1 guidelines at level AA</li>
        </ul>
      </div>
      <!-- Image -->
      <div id="accessibility-features-image" class="flex justify-center md:order-2 order-1">
        <img
          src="/illustrations/accessibility_image.svg"
          alt="Illustration of accessibility-features"
          class="w-full max-w-[400px] md:max-w-[450px]"
        />
      </div>
    </div>
  </section>

  <!-- Accessibility-testing -->
  <section id="accessibility-testing" class="grid grid-cols-12 max-w-6xl mx-auto md:pt-desktop-top pt-mobil-top md:px-0 px-6">
    <h3 id="accessibility-testing-title" class="col-span-12 text-gray-950 mb-4">Accessibility-testing</h3>
    <p id="accessibility-testing-text" class="max-w-2xl col-span-12 text-gray-950 mb-8 leading-7">
      To ensure a high level of accessibility, I use a combination of manual testing and automated tools. Some of these tools include:
    </p>
    <ul id="accessibility-testing-list" class="col-span-12 list-none text-gray-950 space-y-2">
      <li><strong>✅ WAVE:</strong> For structure, contrast, and alt-text evaluation</li>
      <li><strong>✅ Lighthouse:</strong> To check performance- and accessibility-scores</li>
      <li><strong>✅ Keyboard-only navigation:</strong> To ensure all interactive elements are reachable and usable</li>
    </ul>
  </section>

  <!-- Continuous improvement -->
  <section id="continuous-improvement" class="grid grid-cols-12 max-w-6xl mx-auto md:pt-desktop-top pt-mobil-top md:px-0 px-6">
    <h3 id="continuous-improvement-title" class="col-span-12 text-gray-950 mb-4">Continuous improvement</h3>
    <p id="continuous-improvement-text" class="col-span-12 text-gray-950 max-w-4xl p-6 bg-gray-100 rounded-2xl border-l-4 border border-gray-200">
      Accessibility is an ongoing process. As I continue to grow as a designer, I'm committed to learning more about inclusive practices and improving
      this site based on user-feedback and new standards.
    </p>
  </section>

  <!-- Navigation Back to Portfolio -->
  <section class="button-container mx-auto pb-16 md:pt-24 pt-16 text-center">
    <a href="/" class="mt-8 btn_container">
      <Button variant="primary" size="small">Back to homepage</Button>
    </a>
  </section>
</MainLayout>

<script>
  import { inView } from "motion";

  document.addEventListener("DOMContentLoaded", () => {
    const reduceMotion = document.body.classList.contains("reduce-motion");

    if (!reduceMotion) {
      const elementmedanimation1 = document.querySelector(".heading-title");
      inView(elementmedanimation1, () => {
        elementmedanimation1.classList.add("animate__animated", "animate__backInRight");
      });

      const elementmedanimation2 = document.querySelector(".heading-text");
      inView(elementmedanimation2, () => {
        elementmedanimation2.classList.add("animate__animated", "animate__backInLeft");
      });

      const elementmedanimation3 = document.querySelector("#lines");
      inView(elementmedanimation3, () => {
        elementmedanimation3.classList.add("animate__animated", "animate__backInRight");
      });

      const elementmedanimation4 = document.querySelector(".button-container");
      inView(elementmedanimation4, () => {
        elementmedanimation4.classList.add("animate__animated", "animate__fadeInRight");
      });

      const elementmedanimation5 = document.querySelector("#accessibility-features-image");
      inView(elementmedanimation5, () => {
        elementmedanimation5.classList.add("animate__animated", "animate__fadeInRight");
      });

      const elementmedanimation6 = document.querySelector("#accessibility-features-title");
      inView(elementmedanimation6, () => {
        elementmedanimation6.classList.add("animate__animated", "animate__fadeInLeft");
      });

      const list = document.querySelectorAll("#accessibility-features-list > li");

      list.forEach((list, index) => {
        inView(list, () => {
          list.classList.add("animate__animated", "animate__fadeInUp");
          list.style.animationDelay = `${index * 0.2}s`; // Delay each image by 0.2s
        });
      });

      const elementmedanimation7 = document.querySelector("#accessibility-testing-title");
      inView(elementmedanimation7, () => {
        elementmedanimation7.classList.add("animate__animated", "animate__slideInLeft");
      });

      const elementmedanimation8 = document.querySelector("#accessibility-testing-text");
      inView(elementmedanimation8, () => {
        elementmedanimation8.classList.add("animate__animated", "animate__slideInRight");
      });

      const list2 = document.querySelectorAll("#accessibility-testing-list > li");

      list2.forEach((list2, index) => {
        inView(list2, () => {
          list2.classList.add("animate__animated", "animate__fadeInUp");
          list2.style.animationDelay = `${index * 0.2}s`; // Delay each image by 0.2s
        });
      });

      const elementmedanimation10 = document.querySelector("#continuous-improvement-title");
      inView(elementmedanimation10, () => {
        elementmedanimation10.classList.add("animate__animated", "animate__fadeInRight");
      });

      const elementmedanimation11 = document.querySelector("#continuous-improvement-text");
      inView(elementmedanimation11, () => {
        elementmedanimation11.classList.add("animate__animated", "animate__fadeInLeft");
      });
    }
  });
</script>

<style>
  body.dark #accessibility-features-title,
  body.dark #accessibility-features-text,
  body.dark #accessibility-testing-title,
  body.dark #accessibility-testing-text,
  body.dark #continuous-improvement-title,
  body.dark #continuous-improvement-text,
  body.dark .heading-title,
  body.dark .heading-text {
    color: #f6f6f6;
  }

  body.dark #accessibility-features-list > li,
  body.dark #accessibility-testing-list > li {
    color: #f6f6f6;
  }

  body.dark #lines hr {
    border-color: #6d6d6d;
  }

  body.dark #continuous-improvement-text {
    background-color: #454545;
    border-color: #6d6d6d;
  }

  body.dark #accessibility-features-image > img {
    filter: invert(1);
  }
</style>
